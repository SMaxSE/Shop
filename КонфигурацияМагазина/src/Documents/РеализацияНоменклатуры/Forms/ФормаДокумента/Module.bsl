&НаКлиенте
Перем мПараметрыФормыВыбораНоменклатуры;   

&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	Сообщить("Ок");
КонецПроцедуры

&НаКлиенте
Процедура ТоварНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка) 
    СтандартнаяОбработка = Ложь;   
	
    ТекущиеДанные = Элементы.Товар.ТекущиеДанные;
    //ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", мПараметрыФормыВыбораНоменклатуры).Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
    мПараметрыФормыВыбораНоменклатуры.ТекущаяСтрока = ТекущиеДанные.Номенклатура;
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", мПараметрыФормыВыбораНоменклатуры, Элементы.Товар.ТекущийЭлемент).Заголовок = Заголовок;
КонецПроцедуры

&НаСервере
Функция ПолучитьССылкуНаГруппуНоменклатуры(НазваниеГруппы) 
	Возврат Справочники.Номенклатура.НайтиПоНаименованию(НазваниеГруппы);
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Параметры.Свойство("Заголовок", Заголовок);  
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)   
	//ПараметрыОтбораНоменклатуры = Новый Структура();
	//мПараметрыФормыВыбораНоменклатуры = Новый Структура();
	//ПараметрыОтбораНоменклатуры.Вставить("Родитель", Новый Структура("Родитель", ПолучитьССылкуНаГруппуНоменклатуры(Объект.ВидНоменклатуры)));   
	//мПараметрыФормыВыбораНоменклатуры.Вставить("Отбор", ПараметрыОтбораНоменклатуры);  
	ПараметрыОтбораНоменклатуры = Новый Структура();
	мПараметрыФормыВыбораНоменклатуры = Новый Структура();
	ПараметрыОтбораНоменклатуры.Вставить("ВидНоменклатуры", Объект.ВидНоменклатуры); 
	мПараметрыФормыВыбораНоменклатуры.Вставить("Отбор", ПараметрыОтбораНоменклатуры);
	мПараметрыФормыВыбораНоменклатуры.Вставить("ТекущаяСтрока", Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	//Объект.Номенклатура.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// Вставить содержимое обработчика.
		
КонецПроцедуры

&НаКлиенте
Процедура ТоварНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Товар.ТекущиеДанные; 
	ТекущиеДанные.Номенклатура = ВыбранноеЗначение;
КонецПроцедуры
//&НаКлиенте
//Функция ПолучитьТекущиеДанные()   
//	Возврат Элементы.Товар.ТекущиеДанные;
//КонецФункции

//&НаКлиенте
//Функция ПолучитьНоменклатуру()   
//	Возврат ПолучитьТекущиеДанные().Номенклатура;
//КонецФункции  

//&НаКлиенте
//Функция ПолучитьВидНоменклатуры()   
//	Возврат ПолучитьТекущиеДанные().ВидНоменклатуры;
//КонецФункции 

//&НаКлиенте
//Функция ПолучитьТипЦены()   
//	Возврат ПолучитьТекущиеДанные().ТипЦены;
//КонецФункции 


//&НаКлиенте
//Функция ПолучитьКоличество()   
//	Возврат ПолучитьТекущиеДанные().Количество;
//КонецФункции 


//&НаКлиенте
//Функция ПолучитьЦену()   
//	Возврат ПолучитьТекущиеДанные().Цена;
//КонецФункции


//&НаСервере 
//Функция ПолучитьЦенуПоТипу(Номенклатура, ТипЦены)
//	//Запрос = Новый Запрос;
//	//Запрос.Текст = "ВЫБРАТЬ
//	//               |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
//	//               |ИЗ
//	//               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаДокумента, &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних";	
//	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
//	//Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
//	//РезультатЗапроса = Запрос.Выполнить();	
//	//ВыборкаТоваров = РезультатЗапроса.Выбрать();	
//	//Пока ВыборкаТоваров.Следующий() Цикл
//	//	Если ТипЦены = Перечисления.ТипЦеныТовара.Розничная Тогда
//	//        Возврат ВыборкаТоваров.Розничная;
//	//    ИначеЕсли ТипЦены = Перечисления.ТипЦеныТовара.Оптовая Тогда		
//	//        Возврат ВыборкаТоваров.Оптовая;	
//	//    КонецЕсли;
//	//КонецЦикла;
//КонецФункции


//&НаКлиенте
//Функция ПолучитьСумму(Количество, Цена)     	
//	Возврат Количество * Цена;              
//КонецФункции 


//&НаСервере
//Функция ПолучитьКоличествоПоТипуЦены(Номенклатура, ТипЦены, ТекущееКоличество)
//	
//	//Если ТипЦены = Перечисления.ТипЦеныТовара.Оптовая Тогда
//	//	Запрос = Новый Запрос;
//	//    Запрос.Текст = "ВЫБРАТЬ
//	//                   |	ЦеныНоменклатурыСрезПоследних.Количество КАК Количество
//	//                   |ИЗ
//	//                   |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаДокумента, Товар = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних";	
//	//	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
//	//	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
//	//	
//	//	РезультатЗапроса = Запрос.Выполнить();	
//	//	ВыборкаТоваров = РезультатЗапроса.Выбрать();
//	//	Пока ВыборкаТоваров.Следующий() Цикл
//	//	    Возврат ВыборкаТоваров.Количество; 
//	//	КонецЦикла;
//	//Иначе
//	//	Если ТекущееКоличество = 0 Тогда
//	//		Возврат 1;
//	//	КонецЕсли;
//	//	Возврат ТекущееКоличество;
//	//КонецЕсли;
//	
//КонецФункции       


//&НаКлиенте
//Процедура РасчётСуммы() 
//    ПолучитьТекущиеДанные().Цена = ПолучитьЦенуПоТипу(ПолучитьНоменклатуру(), ПолучитьТипЦены());	
//	ПолучитьТекущиеДанные().Сумма = ПолучитьСумму(ПолучитьКоличество(), ПолучитьЦену());	
//КонецПроцедуры


//&НаКлиенте
//Процедура ТоварТипЦеныПриИзменении(Элемент)
//	ПолучитьТекущиеДанные().Количество = ПолучитьКоличествоПоТипуЦены(ПолучитьНоменклатуру(), ПолучитьТипЦены(), ПолучитьКоличество());
//	РасчётСуммы();
//КонецПроцедуры


//&НаКлиенте
//Процедура ТоварНоменклатураПриИзменении(Элемент)
//	РасчётСуммы();
//КонецПроцедуры


//&НаКлиенте
//Процедура ТоварКоличествоПриИзменении(Элемент) 
//	ПолучитьТекущиеДанные().Количество = ПолучитьКоличествоПоТипуЦены(ПолучитьНоменклатуру(), ПолучитьТипЦены(), ПолучитьКоличество());
//	РасчётСуммы();	
//КонецПроцедуры


//&НаКлиенте
//Процедура ТоварПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
//	// Вставить содержимое обработчика.
//КонецПроцедуры


//&НаСервере
//Функция ПолучитьВидЦеныПоУмолчанию()
//    Возврат Справочники.ВидыЦенНоменклатуры.НайтиПоНаименованию("Розничная");	
//КонецФункции 


//&НаКлиенте
//Функция ПолучитьКоличествоПоУмолчанию()
//    Возврат 1;	
//КонецФункции 


//&НаСервере
//Функция ПолучитьСпособОплатыПоУмолчанию()   
//    Возврат Перечисления.СпособОплатыТовара.Наличными;	
//КонецФункции   


//&НаСервере
//Функция ПолучитьСпособПолученияПоУмолчанию()
//    Возврат Перечисления.СпособПолученияТовара.Самовывоз;	
//КонецФункции


//&НаКлиенте
//Процедура ТоварПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование) 	
//	ТекущиеДанные = ПолучитьТекущиеДанные();
//	Если НоваяСтрока И НЕ Копирование Тогда
//	    ТекущиеДанные.Количество = ПолучитьКоличествоПоУмолчанию();    		
//		ТекущиеДанные.СпособПолучения = ПолучитьСпособПолученияПоУмолчанию();    
//	КонецЕсли;		
//КонецПроцедуры

//&НаКлиенте
//Процедура ВидНоменклатурыПриИзменении(Элемент)
//	Если Объект.ВидНоменклатуры = ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Услуги") Тогда
//	    Элементы.Товар.ПодчиненныеЭлементы.ТоварСпособПолучения.Видимость = Ложь;
//	Иначе
//	    Элементы.Товар.ПодчиненныеЭлементы.ТоварСпособПолучения.Видимость = Истина;	
//    КонецЕсли;
//КонецПроцедуры

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	//Объект.ВидНоменклатуры = ПолучитьВидНоменклатурыПоУмолчанию();
//	//Объект.ВидЦены = ПолучитьВидЦеныПоУмолчанию();
//	//Объект.СпособОплаты = ПолучитьСпособОплатыПоУмолчанию();
//КонецПроцедуры

//&НаКлиенте
//Процедура ВидЦеныПриИзменении(Элемент)  
//	//Запрос = Новый Запрос;
//	//Запрос.Текст = "ВЫБРАТЬ
//	//               |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
//	//               |ИЗ
//	//               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаДокумента, &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних";	
//	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
//	//Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
//	//РезультатЗапроса = Запрос.Выполнить();	
//	//ВыборкаТоваров = РезультатЗапроса.Выбрать();
//	//Для Каждого Номенклатура Из Объект.Товары Цикл
//	//	
//	//КонецЦикла;
//КонецПроцедуры
